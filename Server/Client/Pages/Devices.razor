@page "/devices"
@using BlazorComponentBus;

@inject HttpClient httpClient
@inject IComponentBus Bus
@inject NavigationManager Manager

<div class="wrapper">
	<div class="title">
		Экспертная система оценки измерительных приборов
	</div>
	<div class="wrapper_inner">

		<div class="navigation">
			<a class="navigation-link" @onclick="() => GoToCharacteristics()">Характеристики</a>
			<a class="navigation-link navigation-link_current" @onclick="() => GoToDevices()">Приборы</a>
			<a class="navigation-link" @onclick="() => GoToTypes()">Типы приборов</a>
			<a class="navigation-link" @onclick="() => GoToUnits()">Единицы измерения</a>
			<a class="navigation-link" @onclick="() => GoToSources()">Источники</a>
			<a class="navigation-link" @onclick="() => GoToProducers()">Производители</a>
		</div>

		<div class="main">
			<h3>Измерительные приборы</h3>
			<button class="button" @onclick="() => AddDevice()">Добавить прибор</button>

			<table class="table">
				<tr>
					<th>Название прибора</th>
					<th>Цена</th>
					<th>Ссылка на источник</th>
					<th>Производитель</th>
					<th>Источник</th>
					<th>Тип прибора</th>
					<th>Характеристики</th>
					<th>Действия</th>
				</tr>
				<tbody>

					@foreach (var device in _devices)
					{
						<tr>
							<th>
								<input type="text" value="@device.Name" @oninput="(e) => device.Name = string.IsNullOrEmpty(e.Value.ToString()) ? string.Empty : e.Value.ToString()" />
							</th>
							<th>
								<input type="text" value="@device.Price.ToString()" @oninput="(e) => device.Price = double.TryParse(e.Value.ToString(), out var value) ? value : 0" />
							</th>
							<th>
								<input type="text" value="@device.Url" @oninput="(e) => device.Url = string.IsNullOrEmpty(e.Value.ToString()) ? string.Empty : e.Value.ToString()" />
							</th>
							<th>
								<input value="@GetProducerName(device)" @onchange="(e) => device.Producer = _producers.FirstOrDefault(t => t.Name == e.Value.ToString())" type="text" name="producers" list="producersname">
								<datalist id="producersname">
									@foreach (var producer in _producers)
									{
										<option>@producer.Name</option>
									}
								</datalist>
							</th>
							<th>
								<input value="@GetSourceName(device)" @onchange="(e) => device.Source = _sources.FirstOrDefault(t => t.Name == e.Value.ToString())" type="text" name="sources" list="sourcesname">
								<datalist id="sourcesname">
									@foreach (var source in _sources)
									{
										<option>@source.Name</option>
									}
								</datalist>
							</th>
							<th>
								<input value="@GetTypeName(device)" @onchange="(e) => device.Type = _types.FirstOrDefault(t => t.Name == e.Value.ToString())" type="text" name="types" list="typesname">
								<datalist id="typesname">
									@foreach (var type in _types)
									{
										<option>@type.Name</option>
									}
								</datalist>
							</th>
							<th>
								<button class="button" @onclick="() => ChangeCharacteristics(device)">Изменить характеристики</button>
							</th>
							<th>
								<button class="button" @onclick="() => UpdateDevice(device)">Изменить</button>
								<button class="button" @onclick="() => DeleteDevice(device)">Удалить</button>
							</th>
						</tr>
					}
				</tbody>
			</table>
		</div>
	</div>
</div>



